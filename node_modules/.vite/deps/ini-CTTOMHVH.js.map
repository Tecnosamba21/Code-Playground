{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/ini/ini.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/ini/ini.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"#\"\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".ini\",\r\n  // we include these common regular expressions\r\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  // The main tokenizer for our languages\r\n  tokenizer: {\r\n    root: [\r\n      // sections\r\n      [/^\\[[^\\]]*\\]/, \"metatag\"],\r\n      // keys\r\n      [/(^\\w+)(\\s*)(\\=)/, [\"key\", \"\", \"delimiter\"]],\r\n      // whitespace\r\n      { include: \"@whitespace\" },\r\n      // numbers\r\n      [/\\d+/, \"number\"],\r\n      // strings: recover on non-terminated strings\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/\"/, \"string\", '@string.\"'],\r\n      [/'/, \"string\", \"@string.'\"]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"\"],\r\n      [/^\\s*[#;].*$/, \"comment\"]\r\n    ],\r\n    string: [\r\n      [/[^\\\\\"']+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [\r\n        /[\"']/,\r\n        {\r\n          cases: {\r\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\r\n            \"@default\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    ]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": ";;;AASA,IAAI,OAAO;AAAA,EACT,UAAU;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,UAAU;AAAA,IACR,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAK,GAAG;AAAA,EACX;AAAA,EACA,kBAAkB;AAAA,IAChB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EAC1B;AAAA,EACA,kBAAkB;AAAA,IAChB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,IACxB,EAAE,MAAM,KAAK,OAAO,IAAI;AAAA,EAC1B;AACF;AACA,IAAI,WAAW;AAAA,EACb,cAAc;AAAA,EACd,cAAc;AAAA;AAAA,EAEd,SAAS;AAAA;AAAA,EAET,WAAW;AAAA,IACT,MAAM;AAAA;AAAA,MAEJ,CAAC,eAAe,SAAS;AAAA;AAAA,MAEzB,CAAC,mBAAmB,CAAC,OAAO,IAAI,WAAW,CAAC;AAAA;AAAA,MAE5C,EAAE,SAAS,cAAc;AAAA;AAAA,MAEzB,CAAC,OAAO,QAAQ;AAAA;AAAA,MAEhB,CAAC,mBAAmB,gBAAgB;AAAA;AAAA,MAEpC,CAAC,mBAAmB,gBAAgB;AAAA;AAAA,MAEpC,CAAC,KAAK,UAAU,WAAW;AAAA,MAC3B,CAAC,KAAK,UAAU,WAAW;AAAA,IAC7B;AAAA,IACA,YAAY;AAAA,MACV,CAAC,cAAc,EAAE;AAAA,MACjB,CAAC,eAAe,SAAS;AAAA,IAC3B;AAAA,IACA,QAAQ;AAAA,MACN,CAAC,YAAY,QAAQ;AAAA,MACrB,CAAC,YAAY,eAAe;AAAA,MAC5B,CAAC,OAAO,uBAAuB;AAAA,MAC/B;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,YACL,WAAW,EAAE,OAAO,UAAU,MAAM,OAAO;AAAA,YAC3C,YAAY;AAAA,UACd;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
