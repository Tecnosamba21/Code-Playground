{
  "version": 3,
  "sources": ["../../monaco-editor/esm/vs/basic-languages/yaml/yaml.js"],
  "sourcesContent": ["/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\r\n\r\n// src/fillers/monaco-editor-core.ts\r\nvar monaco_editor_core_exports = {};\r\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\r\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\r\n\r\n// src/basic-languages/yaml/yaml.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"#\"\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  folding: {\r\n    offSide: true\r\n  },\r\n  onEnterRules: [\r\n    {\r\n      beforeText: /:\\s*$/,\r\n      action: {\r\n        indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\r\n      }\r\n    }\r\n  ]\r\n};\r\nvar language = {\r\n  tokenPostfix: \".yaml\",\r\n  brackets: [\r\n    { token: \"delimiter.bracket\", open: \"{\", close: \"}\" },\r\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\r\n  ],\r\n  keywords: [\"true\", \"True\", \"TRUE\", \"false\", \"False\", \"FALSE\", \"null\", \"Null\", \"Null\", \"~\"],\r\n  numberInteger: /(?:0|[+-]?[0-9]+)/,\r\n  numberFloat: /(?:0|[+-]?[0-9]+)(?:\\.[0-9]+)?(?:e[-+][1-9][0-9]*)?/,\r\n  numberOctal: /0o[0-7]+/,\r\n  numberHex: /0x[0-9a-fA-F]+/,\r\n  numberInfinity: /[+-]?\\.(?:inf|Inf|INF)/,\r\n  numberNaN: /\\.(?:nan|Nan|NAN)/,\r\n  numberDate: /\\d{4}-\\d\\d-\\d\\d([Tt ]\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(( ?[+-]\\d\\d?(:\\d\\d)?)|Z)?)?/,\r\n  escapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\r\n  tokenizer: {\r\n    root: [\r\n      { include: \"@whitespace\" },\r\n      { include: \"@comment\" },\r\n      // Directive\r\n      [/%[^ ]+.*$/, \"meta.directive\"],\r\n      // Document Markers\r\n      [/---/, \"operators.directivesEnd\"],\r\n      [/\\.{3}/, \"operators.documentEnd\"],\r\n      // Block Structure Indicators\r\n      [/[-?:](?= )/, \"operators\"],\r\n      { include: \"@anchor\" },\r\n      { include: \"@tagHandle\" },\r\n      { include: \"@flowCollections\" },\r\n      { include: \"@blockStyle\" },\r\n      // Numbers\r\n      [/@numberInteger(?![ \\t]*\\S+)/, \"number\"],\r\n      [/@numberFloat(?![ \\t]*\\S+)/, \"number.float\"],\r\n      [/@numberOctal(?![ \\t]*\\S+)/, \"number.octal\"],\r\n      [/@numberHex(?![ \\t]*\\S+)/, \"number.hex\"],\r\n      [/@numberInfinity(?![ \\t]*\\S+)/, \"number.infinity\"],\r\n      [/@numberNaN(?![ \\t]*\\S+)/, \"number.nan\"],\r\n      [/@numberDate(?![ \\t]*\\S+)/, \"number.date\"],\r\n      // Key:Value pair\r\n      [/(\".*?\"|'.*?'|[^#'\"]*?)([ \\t]*)(:)( |$)/, [\"type\", \"white\", \"operators\", \"white\"]],\r\n      { include: \"@flowScalars\" },\r\n      // String nodes\r\n      [\r\n        /.+?(?=(\\s+#|$))/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": \"keyword\",\r\n            \"@default\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n    // Flow Collection: Flow Mapping\r\n    object: [\r\n      { include: \"@whitespace\" },\r\n      { include: \"@comment\" },\r\n      // Flow Mapping termination\r\n      [/\\}/, \"@brackets\", \"@pop\"],\r\n      // Flow Mapping delimiter\r\n      [/,/, \"delimiter.comma\"],\r\n      // Flow Mapping Key:Value delimiter\r\n      [/:(?= )/, \"operators\"],\r\n      // Flow Mapping Key:Value key\r\n      [/(?:\".*?\"|'.*?'|[^,\\{\\[]+?)(?=: )/, \"type\"],\r\n      // Start Flow Style\r\n      { include: \"@flowCollections\" },\r\n      { include: \"@flowScalars\" },\r\n      // Scalar Data types\r\n      { include: \"@tagHandle\" },\r\n      { include: \"@anchor\" },\r\n      { include: \"@flowNumber\" },\r\n      // Other value (keyword or string)\r\n      [\r\n        /[^\\},]+/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": \"keyword\",\r\n            \"@default\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n    // Flow Collection: Flow Sequence\r\n    array: [\r\n      { include: \"@whitespace\" },\r\n      { include: \"@comment\" },\r\n      // Flow Sequence termination\r\n      [/\\]/, \"@brackets\", \"@pop\"],\r\n      // Flow Sequence delimiter\r\n      [/,/, \"delimiter.comma\"],\r\n      // Start Flow Style\r\n      { include: \"@flowCollections\" },\r\n      { include: \"@flowScalars\" },\r\n      // Scalar Data types\r\n      { include: \"@tagHandle\" },\r\n      { include: \"@anchor\" },\r\n      { include: \"@flowNumber\" },\r\n      // Other value (keyword or string)\r\n      [\r\n        /[^\\],]+/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": \"keyword\",\r\n            \"@default\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n    // First line of a Block Style\r\n    multiString: [[/^( +).+$/, \"string\", \"@multiStringContinued.$1\"]],\r\n    // Further lines of a Block Style\r\n    //   Workaround for indentation detection\r\n    multiStringContinued: [\r\n      [\r\n        /^( *).+$/,\r\n        {\r\n          cases: {\r\n            \"$1==$S2\": \"string\",\r\n            \"@default\": { token: \"@rematch\", next: \"@popall\" }\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n    whitespace: [[/[ \\t\\r\\n]+/, \"white\"]],\r\n    // Only line comments\r\n    comment: [[/#.*$/, \"comment\"]],\r\n    // Start Flow Collections\r\n    flowCollections: [\r\n      [/\\[/, \"@brackets\", \"@array\"],\r\n      [/\\{/, \"@brackets\", \"@object\"]\r\n    ],\r\n    // Start Flow Scalars (quoted strings)\r\n    flowScalars: [\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      [/'[^']*'/, \"string\"],\r\n      [/\"/, \"string\", \"@doubleQuotedString\"]\r\n    ],\r\n    doubleQuotedString: [\r\n      [/[^\\\\\"]+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/\"/, \"string\", \"@pop\"]\r\n    ],\r\n    // Start Block Scalar\r\n    blockStyle: [[/[>|][0-9]*[+-]?$/, \"operators\", \"@multiString\"]],\r\n    // Numbers in Flow Collections (terminate with ,]})\r\n    flowNumber: [\r\n      [/@numberInteger(?=[ \\t]*[,\\]\\}])/, \"number\"],\r\n      [/@numberFloat(?=[ \\t]*[,\\]\\}])/, \"number.float\"],\r\n      [/@numberOctal(?=[ \\t]*[,\\]\\}])/, \"number.octal\"],\r\n      [/@numberHex(?=[ \\t]*[,\\]\\}])/, \"number.hex\"],\r\n      [/@numberInfinity(?=[ \\t]*[,\\]\\}])/, \"number.infinity\"],\r\n      [/@numberNaN(?=[ \\t]*[,\\]\\}])/, \"number.nan\"],\r\n      [/@numberDate(?=[ \\t]*[,\\]\\}])/, \"number.date\"]\r\n    ],\r\n    tagHandle: [[/\\![^ ]*/, \"tag\"]],\r\n    anchor: [[/[&*][^ ]+/, \"namespace\"]]\r\n  }\r\n};\r\nexport {\r\n  conf,\r\n  language\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
